pipeline {
    agent any

    environment {
        AWS_ACCESS_KEY_ID = credentials('aws-access-key-id')
        AWS_SECRET_ACCESS_KEY = credentials('aws-secret-access-key')
        TF_VAR_region = 'us-east-1'
    }

    stages {
        stage('Clone Repository') {
            steps {
                script {
                    echo 'Cloning repository...'
                    git url: 'https://github.com/Manjyyot/TerraformTravelmemory.git', branch: 'main'
                }
            }
        }

        stage('Setup AWS Credentials') {
            steps {
                script {
                    echo 'Configuring AWS credentials...'
                    withEnv([ 
                        "AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}",
                        "AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}",
                        "AWS_DEFAULT_REGION=${TF_VAR_region}"
                    ]) {
                        sh 'aws sts get-caller-identity'
                    }
                }
            }
        }

        stage('Terraform Init & Apply') {
            steps {
                script {
                    dir('terraform') {
                        sh 'terraform init'
                        sh 'terraform apply -auto-approve'
                    }
                }
            }
        }

        stage('Retrieve Terraform Outputs') {
            steps {
                script {
                    dir('terraform') {
                        backend_ip = sh(script: "terraform output -raw backend_instance_ip", returnStdout: true).trim()
                        frontend_ip = sh(script: "terraform output -raw frontend_instance_ip", returnStdout: true).trim()
                        mongodb_ip = sh(script: "terraform output -raw mongodb_instance_ip", returnStdout: true).trim()
                    }
                    echo "Backend IP: ${backend_ip}"
                    echo "Frontend IP: ${frontend_ip}"
                    echo "MongoDB IP: ${mongodb_ip}"
                }
            }
        }

        stage('Deploy Backend') {
            steps {
                script {
                    withCredentials([sshUserPrivateKey(credentialsId: 'newManjyyot.pem', keyFileVariable: 'PEM_FILE', usernameVariable: 'SSH_USER')]) {
                        sshCommand remote: [
                            name: 'Backend Server',  // Added the name field
                            host: backend_ip,
                            user: SSH_USER, // The username from the credential
                            identityFile: PEM_FILE, // Automatically uses the injected PEM key
                            allowAnyHosts: true
                        ], command: '''
                            sudo apt update -y
                            sudo apt install -y nodejs npm git
                            git clone https://github.com/Manjyyot/TerraformTravelmemory.git
                            cd TerraformTravelmemory/backend
                            echo "MONGO_URI=mongodb://${mongodb_ip}:27017/mydb" > .env
                            echo "PORT=3000" >> .env
                            npm install
                            nohup node index.js > backend.log 2>&1 &
                        '''
                    }
                }
            }
        }

        stage('Deploy Frontend') {
            steps {
                script {
                    withCredentials([sshUserPrivateKey(credentialsId: 'newManjyyot.pem', keyFileVariable: 'PEM_FILE', usernameVariable: 'SSH_USER')]) {
                        sshCommand remote: [
                            name: 'Frontend Server',  // Added the name field
                            host: frontend_ip,
                            user: SSH_USER, // The username from the credential
                            identityFile: PEM_FILE, // Automatically uses the injected PEM key
                            allowAnyHosts: true
                        ], command: '''
                            sudo apt update -y
                            sudo apt install -y nodejs npm git
                            git clone https://github.com/Manjyyot/TerraformTravelmemory.git
                            cd TerraformTravelmemory/frontend
                            echo "export const API_URL = 'http://${backend_ip}:3000';" > src/url.js
                            npm install
                            npm start &
                        '''
                    }
                }
            }
        }

        stage('Deploy MongoDB') {
            steps {
                script {
                    withCredentials([sshUserPrivateKey(credentialsId: 'newManjyyot.pem', keyFileVariable: 'PEM_FILE', usernameVariable: 'SSH_USER')]) {
                        sshCommand remote: [
                            name: 'MongoDB Server',  // Added the name field
                            host: mongodb_ip,
                            user: SSH_USER, // The username from the credential
                            identityFile: PEM_FILE, // Automatically uses the injected PEM key
                            allowAnyHosts: true
                        ], command: '''
                            sudo apt update -y
                            sudo apt install -y mongodb
                            sudo systemctl start mongodb
                            sudo systemctl enable mongodb
                        '''
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline executed successfully!'
        }
        failure {
            echo 'Pipeline failed. Check logs for errors.'
        }
    }
}
